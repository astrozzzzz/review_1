//К - ичные числа.Среди чисел в системе счисления с основанием K(2≤K≤10) определить 
//сколько имеется чисел из N(1 < N < 20, N + K < 26) разрядов таких, что в их записи 
//содержится два и более подряд идущих нулей.Для того, чтобы избежать переполнения, ответ 
//представьте в виде вещественного числа.

// FIX ME: фигурные скобки должны быть на новой строке в строках 20, 26, 27

#include "k_numbers.h"

using namespace std;

/**
 * @brief Основная функция программы для решения задачи о К-ичных числах.
 * Считывает основание системы счисления K и количество разрядов N,
 * вычисляет количество чисел с двумя и более подряд идущими нулями.
 * @return Код завершения программы (0 при успехе).
 */
int main()
{
    setlocale(LC_ALL, "Russian_Russia.1251");
    int k, n;

    cout << "Введите K (2<=K<=10) : ";
    cin >> k;

    cout << "Введите N (1<N<20, N+K<26) : ";
    cin >> n;

    double nz, oz, tz;
    nz = k - 1; // Числа без ведущих нулей
    // FIX ME Для одного разряда (N=1) не существует чисел, заканчивающихся на ноль
    //oz = 1;     // Числа, заканчивающиеся на 0 (без подряд идущих нулей)
    oz = 0;     // Числа, заканчивающиеся на 0 (без подряд идущих нулей)
    tz = 0;     // Числа, содержащие подряд идущие нули

    for (int i = 2; i <= n; i++) {
        // FIX ME Переменные _nz, _oz, _tz переименованы в temp_nz, temp_oz, temp_tz, чтобы 
        // соответствовать стилю snake_case и быть более описательными.
        //double _nz = nz;
        //double _oz = oz;
        //double _tz = tz;

        double temp_nz = nz;
        double temp_oz = oz;
        double temp_tz = tz;

        nz = (temp_nz + temp_oz) * (k - 1);
        oz = temp_nz;
        tz = temp_tz * k + temp_oz;
    }

    cout << "Числа без двух подряд идущих нулей: " << fixed << nz + oz << "\n";
    cout << "Числа с двумя и более подряд идущими нулями: " << fixed << tz << "\n";

    return 0;
}